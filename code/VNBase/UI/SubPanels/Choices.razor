@using Sandbox;
@using Sandbox.UI;
@using Sandbox.UI.Construct;
@using System;
@using System.Collections.Generic;

@namespace VNBase.UI

@attribute [StyleSheet]
@inherits Panel

<root>
    @if ( DialogueChoices != null && DialogueChoices.Count > 0 && !IsTyping )
    {
        <div class="choicePanel">
            @for (var i = 0; i < DialogueChoices.Count; i++)
            {
                var buttonIndex = i; // Create a copy of i that won't change
                <button class="item-dialogue @(i == DialogueChoice ? "selected-text" : "")" onclick="@(() => ChooseDialogue(buttonIndex))"
                        onmouseover="@(() => HoverChoice())">
                    @DialogueChoices[i]
                </button>
            }
        </div>
    }
</root>

@code {
    private static Pawn Player => Game.LocalPawn as Pawn;

    private string DialogueText { get; set; }
    private IList<string> DialogueChoices { get; set; }
    private bool IsTyping { get; set; }

    private int DialogueChoice { get; set; } = 0;

    private void HoverChoice()
    {
        Sound.FromScreen("ui-hover");
    }

    private void ChooseDialogue(int index)
    {
        Sound.FromScreen("ui-click");
        ScriptPlayer.DialogueChoice(index);
    }

    public override void Tick()
    {
        base.Tick();
        DialogueText = Player.VNScriptPlayer.ActiveDialogueText;
        DialogueChoices = Player.VNScriptPlayer.ActiveDialogueChoices;
        DialogueChoice = Player.VNScriptPlayer.ActiveDialogueChoice;
        IsTyping = Player.VNScriptPlayer.IsTyping;
    }

    protected override int BuildHash()
    {
        return HashCode.Combine(DialogueText, IsTyping, DialogueChoices, DialogueChoice);
    }
}